{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Users/users.module.css","components/Users/UserspreCom.jsx","redux/user-selectors.js","components/Users/UsersContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","UserspreCom","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","map","p","className","currentPage","classes","selectedPage","unselectedPage","onClick","e","onPageChanged","users","u","key","id","src","photos","small","userPhoto","followed","unfollow","follow","name","status","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getInProgress","setInProgress","getIsAuth","UsersContainer","pageNumber","getUsersThunkCreator","toggleInProgress","compose","followingInProgress","setPage","withRouter"],"mappings":"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","file":"static/js/5.a33d7979.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"login/\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"users_nav__1uGZ0\",\"item\":\"users_item__1y6Qb\",\"active\":\"users_active__r31L8\",\"userPhoto\":\"users_userPhoto__XilOO\",\"selectedPage\":\"users_selectedPage__3G2ir\",\"unselectedPage\":\"users_unselectedPage__iUJx2\"};","import classes from \"./users.module.css\";\r\n\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../api/api\";\r\n\r\nconst UserspreCom = (props) => {\r\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n  if (pagesCount > 20) {\r\n    pagesCount = 20;\r\n  }\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {pages.map((p) => {\r\n          return (\r\n            <span\r\n              className={\r\n                props.currentPage === p\r\n                  ? classes.selectedPage\r\n                  : classes.unselectedPage\r\n              }\r\n              onClick={(e) => {\r\n                props.onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      {props.users.map((u) => (\r\n        <div key={u.id}>\r\n          <span>\r\n            <NavLink to={\"/profile/\" + u.id}>\r\n              <div>\r\n                <img\r\n                  src={\r\n                    u.photos.small != null\r\n                      ? u.photos.small\r\n                      : \"https://www.w3schools.com/w3images/avatar2.png\"\r\n                  }\r\n                  className={classes.userPhoto}\r\n                />\r\n              </div>\r\n            </NavLink>\r\n            <div>\r\n              {u.followed ? (\r\n                <button\r\n                  onClick={() => {\r\n                    props.unfollow(u.id);\r\n                  }}\r\n                >\r\n                  unFollow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={() => {\r\n                    props.follow(u.id);\r\n                  }}\r\n                >\r\n                  Follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <div>{u.name}</div>\r\n            <div>{u.status}</div>\r\n          </span>\r\n          <span>\r\n            <div>{\"u.location.country\"}</div>\r\n            <div>{\"u,location.city\"}</div>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserspreCom;\r\n","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getInProgress = (state) => {\r\n  return state.usersPage.setInProgress;\r\n};\r\n\r\nexport const getIsAuth = (state) => {\r\n  return state.auth.isAuth;\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setPage,\r\n  setInProgress,\r\n  getUsersThunkCreator,\r\n} from \"../../redux/user-reducer\";\r\n\r\nimport React from \"react\";\r\nimport UserspreCom from \"./UserspreCom\";\r\nimport Loader from \"../Dialogs/Loader/loader\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getInProgress,\r\n  getIsAuth,\r\n} from \"../../redux/user-selectors\";\r\nimport { getUserProfileThunk } from \"../../redux/profile-reducer\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsersThunkCreator(\r\n      this.props.currentPage,\r\n      this.props.pageSize\r\n    );\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? (\r\n          <Loader />\r\n        ) : (\r\n          <UserspreCom\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            users={this.props.users}\r\n            onPageChanged={this.onPageChanged}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            toggleInProgress={this.props.setInProgress}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getInProgress(state),\r\n    isAuth: getIsAuth(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setPage,\r\n    setInProgress,\r\n    getUsersThunkCreator,\r\n  }),\r\n  withAuthRedirect,\r\n  withRouter\r\n)(UsersContainer);\r\n"],"sourceRoot":""}