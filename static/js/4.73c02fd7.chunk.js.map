{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Dialogs/dialogs.module.css","components/Dialogs/DialogItem/dialogitem.jsx","components/Dialogs/Message/message.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogscontainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Dialogs","dialogsPage","dialogsElements","arrDialogs","map","d","messagesElements","arrMessages","m","dialogs","dialogsItems","messages","values","sendMessageCreator","NewMessageBody","compose","withRouter"],"mappings":"qMAIIA,EAA6B,SAACC,GAChC,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IAExCC,EAFuC,uKAIzC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAJH,GAEbC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBClB3EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8FCYpMC,EATI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,OAAS,GAAKD,IAAEE,QAChC,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,QCCjBC,EAJC,SAACd,GACf,OAAO,yBAAKS,UAAWC,IAAEC,QAASX,EAAMe,U,kBC6CpCC,EAAsBC,YAAU,CAAEC,KAAM,UAAlBD,EAjBL,SAACjB,GACtB,OACE,0BAAMmB,SAAUnB,EAAMoB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAU,WACVT,KAAK,iBACLU,YAAY,wBAGhB,6BACE,6CAQOC,EA9CC,SAACxB,GACf,IAAIP,EAAQO,EAAMyB,YAEdC,EAAkBjC,EAAMkC,WAAWC,KAAI,SAACC,GAAD,OACzC,kBAAC,EAAD,CAAYhB,KAAMgB,EAAEhB,KAAML,GAAIqB,EAAErB,QAE9BsB,EAAmBrC,EAAMsC,YAAYH,KAAI,SAACI,GAAD,OAC3C,kBAAC,EAAD,CAASjB,QAASiB,EAAEjB,aAOtB,OACE,yBAAKN,UAAWC,IAAEuB,SAChB,yBAAKxB,UAAWC,IAAEwB,cAAeR,GACjC,yBAAKjB,UAAWC,IAAEyB,UAChB,6BAAML,GACN,6BACE,kBAACd,EAAD,CAAqBG,SAVZ,SAACiB,GAChBpC,EAAMqC,mBAAmBD,EAAOE,uB,+BCArBC,sBACbpC,aARoB,SAACV,GACrB,MAAO,CACLgC,YAAahC,EAAMgC,eAMI,CAAEY,yBAC3BzC,IACA4C,IAHaD,CAIbf","file":"static/js/4.73c02fd7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"login/\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__3YYhp\",\"dialogsItems\":\"dialogs_dialogsItems__2rryF\",\"dialog\":\"dialogs_dialog__2D1xc\",\"active\":\"dialogs_active__1umpD\",\"messages\":\"dialogs_messages__1OG-W\",\"message\":\"dialogs_message__27n5H\"};","import React, { Component } from \"react\";\r\nimport s from \"../dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \"\" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React, { Component } from \"react\";\r\nimport s from \"../dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport s from \"./dialogs.module.css\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport DialogItem from \"../Dialogs/DialogItem/dialogitem\";\r\nimport Message from \"../Dialogs/Message/message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.arrDialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElements = state.arrMessages.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n\r\n  let addMessage = (values) => {\r\n    props.sendMessageCreator(values.NewMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <AddMessageFormRedux onSubmit={addMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component=\"textarea\"\r\n          name=\"NewMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialog\" })(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  sendMessageCreator,\r\n  \r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"../Dialogs/dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { sendMessageCreator }),\r\n  withAuthRedirect,\r\n  withRouter\r\n)(Dialogs);\r\n"],"sourceRoot":""}