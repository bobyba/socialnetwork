{"version":3,"sources":["components/Dialogs/Loader/loader.module.css","components/Navbar/navbar.module.css","api/api.js","components/Header/Photo.jpg","serviceWorker.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/navbar.jsx","components/Header/header.jsx","components/Header/headercontainer.jsx","components/Login/login.jsx","App.js","index.js","components/Dialogs/Loader/loader.jsx","components/Header/header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/user-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getAuth","getUserProfile","userId","console","warn","followUser","post","responce","unfollowUser","delete","authAPI","me","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","Boolean","window","location","hostname","match","initialState","isAuth","loginProcess","setAuthUserData","type","payload","getAuthUserData","dispatch","a","resultCode","id","authReducer","state","action","initialStatus","appReducer","reducers","combineReducers","postPage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","Navbar","className","classes","nav","item","to","activeClassName","active","Header","props","s","header","src","onClick","HeaderContainer","this","React","Component","connect","LoginReduxForm","reduxForm","handleSubmit","onSubmit","Field","placeholder","name","component","remeberMe","withRouter","DataForm","DialogsContainer","lazy","UsersContainer","Settings","ProfileContainer","Music","News","App","initiliazedApp","initiliazed","path","render","Suspense","fallback","ReactDOM","document","getElementById","Loader","lds_ring","arrPosts","like","message","profile","addPostActionCreator","NewPostBody","setStatus","getUserProfileThunk","getStatusThunk","updateStatusThunk","newPost","stateCopy","newPostText","arrDialogs","arrMessages","sendMessageCreator","newMessage","push","users","totalUsersCount","isFetching","followingInProgress","setPage","idpage","setIsFetching","setInProgress","getUsersThunkCreator","items","totalcount","totalCount","follow","userid","unfollow","map","u","followed"],"mappings":"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","file":"static/js/main.606025eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_ring\":\"loader_lds_ring__TV1hT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__3ZpHK\",\"item\":\"navbar_item__3FvEV\",\"active\":\"navbar_active__2n8Ys\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"46e5042f-ebdf-42b4-a227-5d0185fb13f7\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n  getAuth() {\r\n    return instance.get(\"auth/me\").then((response) => response.data);\r\n  },\r\n  getUserProfile(userId) {\r\n    console.warn(\"PLS USE profileAPI\");\r\n    return instance.get(`profile/${userId}`).then((response) => response.data);\r\n  },\r\n  followUser(userId) {\r\n    return instance\r\n      .post(\"follow/\" + userId, {})\r\n      .then((responce) => responce.data);\r\n  },\r\n  unfollowUser(userId) {\r\n    return instance\r\n      .delete(\"follow/\" + userId)\r\n      .then((responce) => responce.data);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(\"auth/me\");\r\n  },\r\n  login(email, password, rememberMe) {\r\n    return instance.post(\"auth/login\", { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(\"auth/login\");\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`).then((response) => response.data);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(\"profile/status\", { status: status });\r\n  },\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/Photo.9471d0b5.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { usersAPI, authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_AUTH = \"SET_USER_AUTH\";\r\nconst SET_LOGIN_PROCESS = \"SET_USER_AUTH\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  loginProcess: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_AUTH:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n  return {\r\n    type: SET_USER_AUTH,\r\n    payload: { userId, email, login, isAuth },\r\n  };\r\n};\r\n\r\nexport const setloginProcess = (loginProcess) => {\r\n  return {\r\n    type: SET_LOGIN_PROCESS,\r\n    loginProcess,\r\n  };\r\n};\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let data = await usersAPI.getAuth();\r\n  if (data.resultCode === 0) {\r\n    let id = data.data.id;\r\n    let email = data.data.email;\r\n    let login = data.data.login;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, remeberMe) => async (dispatch) => {\r\n  let responce = await authAPI.login(email, password, remeberMe);\r\n  if (responce.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let responce = await authAPI.logout();\r\n  if (responce.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialStatus: false,\r\n  isAuth: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return { ...state, initialStatus: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initialzedSuccess = () => {\r\n  return {\r\n    type: INITIALIZED_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const initiliazedApp = () => (dispatch) => {\r\n  let checkPromise = dispatch(getAuthUserData());\r\n  checkPromise.then(() => {\r\n    dispatch(initialzedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./user-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n  postPage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleWare))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport classes from \"./navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/news\" activeClassName={classes.active}>\r\n          NEWS\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/music\" activeClassName={classes.active}>\r\n          MUSIC\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/settings\" activeClassName={classes.active}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport s from \"./header.module.css\";\r\nimport photo from \"./Photo.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSwZlrDLSlBgSdNC1QNpTBgxP9PNfiXj4IxWdvD70AwXyHMzadg&usqp=CAU\" />\r\n      <div className={s.login}>\r\n        {props.isAuth ? (\r\n          <div onClick={props.logout}>\r\n            {props.login} - <button>LOGOUT</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to=\"/login\">login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./header\";\r\nimport * as axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setAuthUserData,\r\n  getAuthUserData,\r\n  logout,\r\n} from \"../../redux/auth-reducer\";\r\nimport { usersAPI } from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} logout={this.props.logout} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React, { Component } from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, logout } from \"../../redux/auth-reducer\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Loader from \"../Dialogs/Loader/loader\";\r\n\r\nconst LoginForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field placeholder={\"Login\"} name={\"login\"} component={\"input\"} />\r\n      </div>\r\n      <div>\r\n        <Field placeholder={\"Password\"} name={\"password\"} component={\"input\"} />\r\n      </div>\r\n      <div>\r\n        <Field name={\"rememberMe\"} component={\"input\"} type={\"checkbox\"} />\r\n      </div>\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = ({ login, isAuth, loginProcess }) => {\r\n  const onSubmit = (DataForm) => {\r\n    login(DataForm.login, DataForm.password, DataForm.rememberMe);\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  if (loginProcess) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>Login</div>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  loginProcess: state.auth.loginProcess,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { login, logout }),\r\n  withRouter\r\n)(Login);\r\n","import React, { lazy } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/navbar\";\nimport { Route, BrowserRouter, withRouter } from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/headercontainer\";\nimport Login from \"./components/Login/login\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport Loader from \"./components/Dialogs/Loader/loader\";\nimport { initiliazedApp } from \"./redux/app-reducer\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/dialogscontainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\nconst Settings = React.lazy(() => import(\"./components/Settings/settings\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/contentcontainer\"));\nconst Music = React.lazy(() => import(\"./components/Music/music\"));\nconst News = React.lazy(() => import(\"./components/News/news\"));\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initiliazedApp();\n  }\n\n  render() {\n    if (!this.props.initiliazed) {\n      return <Loader />;\n    }\n\n    return (\n      <BrowserRouter>\n        <div className=\"app-wrapper\">\n          <HeaderContainer />\n          <Navbar />\n\n          <div className=\"app-wrapper-content\">\n            <Route path=\"/login\" render={() => <Login />} />\n            <React.Suspense fallback={<Loader />}>\n              <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n              <Route\n                path=\"/profile/:userId?\"\n                render={() => <ProfileContainer />}\n              />\n              <Route path=\"/users\" render={() => <UsersContainer />} />\n              <Route path=\"/news\" render={() => <News />} />\n              <Route path=\"/music\" render={() => <Music />} />\n              <Route path=\"/settings\" render={() => <Settings />} />\n            </React.Suspense>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n//ctrl + z  деиствие наза\n\nconst mapStateToProps = (state) => ({\n  initiliazed: state.app.initialStatus,\n});\n\nexport default compose(\n  connect(mapStateToProps, { initiliazedApp }),\n  withRouter\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/redux-store\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","import React from \"react\";\r\nimport classes from \"./loader.module.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <>\r\n      <div className={classes.lds_ring}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3Yd6k\",\"login\":\"header_login__3NBjU\"};","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\n\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n  arrPosts: [\r\n    { like: \"13\", message: \"NICE MAN\" },\r\n    { like: \"12\", message: \"COOL CAKE\" },\r\n    { like: \"32\", message: \"Smooth\" },\r\n    { like: \"42\", message: \"Memsse\" },\r\n    { like: \"52\", message: \"Nices\" },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = { like: \"10\", message: action.NewPostBody };\r\n      let stateCopy = {\r\n        ...state,\r\n        arrPosts: [...state.arrPosts, newPost],\r\n        newPostText: \"\",\r\n      };\r\n\r\n      return stateCopy;\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n    case SET_STATUS: {\r\n      return { ...state, status: action.status };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addPostActionCreator = (NewPostBody) => {\r\n  return {\r\n    type: ADD_POST,\r\n    NewPostBody,\r\n  };\r\n};\r\n\r\nexport const setUserProfileSuccess = (profile) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n  };\r\n};\r\n\r\nexport const setStatus = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status,\r\n  };\r\n};\r\n\r\nexport const getUserProfileThunk = (userId) => async (dispatch) => {\r\n  let data = await usersAPI.getUserProfile(userId);\r\n  dispatch(setUserProfileSuccess(data));\r\n};\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(data));\r\n};\r\n\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n  arrDialogs: [\r\n    { id: \"1\", name: \"Nice\" },\r\n    { id: \"2\", name: \"Kekes\" },\r\n    { id: \"3\", name: \"Dimas\" },\r\n    { id: \"4\", name: \"Mems\" },\r\n    { id: \"5\", name: \"Nice\" },\r\n  ],\r\n  arrMessages: [\r\n    { id: \"1\", message: \"Nice\" },\r\n    { id: \"2\", message: \"Kekes\" },\r\n    { id: \"3\", message: \"Dimas\" },\r\n    { id: \"4\", message: \"Mems\" },\r\n    { id: \"5\", message: \"Nice\" },\r\n  ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    case SEND_MESSAGE: {\r\n      let stateCopy = { ...state };\r\n      let newMessage = { id: \"6\", message: action.newMessage};\r\n      stateCopy.arrMessages.push(newMessage);\r\n      return stateCopy;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessage) => {\r\n  return {\r\n    type: SEND_MESSAGE,\r\n    newMessage\r\n  };\r\n};\r\n\r\n\r\nexport default dialogsReducer;\r\n","import { usersAPI } from \"../api/api\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_PAGE = \"SET_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst SET_IN_PROGRESS = \"SET_IN_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: false,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userid) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    }\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userid) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    }\r\n    case SET_USERS: {\r\n      return { ...state, users: action.users };\r\n    }\r\n    case SET_PAGE: {\r\n      return {\r\n        ...state,\r\n        currentPage: action.idpage,\r\n      };\r\n    }\r\n    case SET_TOTAL_COUNT: {\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalcount,\r\n      };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    }\r\n    case SET_IN_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userid) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userid,\r\n  };\r\n};\r\n\r\nexport const unfollowSuccess = (userid) => {\r\n  return {\r\n    type: UNFOLLOW,\r\n    userid,\r\n  };\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n  return {\r\n    type: SET_USERS,\r\n    users,\r\n  };\r\n};\r\n\r\nexport const setPage = (idpage) => {\r\n  return {\r\n    type: SET_PAGE,\r\n    idpage,\r\n  };\r\n};\r\n\r\nexport const setTotalUsersCount = (totalcount) => {\r\n  return {\r\n    type: SET_TOTAL_COUNT,\r\n    totalcount,\r\n  };\r\n};\r\n\r\nexport const setIsFetching = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n};\r\n\r\nexport const setInProgress = (isFetching) => {\r\n  return {\r\n    type: SET_IN_PROGRESS,\r\n    isFetching,\r\n  };\r\n};\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (\r\n  dispatch\r\n) => {\r\n  dispatch(setIsFetching(true));\r\n\r\n  let data = await usersAPI.getUsers(currentPage, pageSize);\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setIsFetching(false));\r\n  dispatch(setTotalUsersCount(data.totalCount));\r\n  dispatch(setPage(currentPage));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  let data = await usersAPI.followUser(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(followSuccess(userId));\r\n  }\r\n  dispatch(setInProgress(true));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  let data = await usersAPI.unfollowUser(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(unfollowSuccess(userId));\r\n  }\r\n  dispatch(setInProgress(true));\r\n};\r\n\r\nexport default usersReducer;\r\n"],"sourceRoot":""}